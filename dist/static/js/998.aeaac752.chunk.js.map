{"version":3,"file":"static/js/998.aeaac752.chunk.js","mappings":"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","sources":["constants/apiRoutes.js","pages/ForgotPassword.js","services/AuthService.js"],"sourcesContent":["export const API_BASE_URL = '/api';\n\nexport const AUTH = {\n  LOGIN: `${API_BASE_URL}/auth/login`,\n  REGISTER: `${API_BASE_URL}/auth/register`,\n  FORGOT_PASSWORD: `${API_BASE_URL}/auth/forgot-password`,\n  RESET_PASSWORD: `${API_BASE_URL}/auth/reset-password`,\n  UPDATE_PROFILE: `${API_BASE_URL}/auth/update-profile`,\n};\n\nexport const USER = {\n  VALIDATE_USER: `${API_BASE_URL}/auth/user`,\n  GET_PROFILE: `${API_BASE_URL}/user/profile`,\n  UPDATE_PROFILE: `${API_BASE_URL}/user/update-profile`,\n};\n\nexport const POSTS = {\n  GET_ALL: `${API_BASE_URL}/posts`,\n  CREATE: `${API_BASE_URL}/posts/create`,\n  UPDATE: `${API_BASE_URL}/posts/update`,\n  DELETE: `${API_BASE_URL}/posts/delete`,\n};","// Importing necessary CSS file for styling\nimport \"../css/ForgotPassword.css\";\n\n// Importing React and necessary hooks from 'react'\nimport React, { useState } from 'react';\n\nimport { makeForgotPasswordRequest } from '../services/AuthService';\n\n// Importing hook from 'react-router-dom' for navigation\nimport { useNavigate } from 'react-router-dom';\n\n// Defining the ForgotPassword component\nconst ForgotPassword = () => {\n  // State hooks for managing form inputs and messages\n  const [email, setEmail] = useState(''); // State for email input\n  const [errors, setErrors] = useState({}); // State for form validation errors\n  const [message, setMessage] = useState(''); // State for success message\n  const [error, setError] = useState(''); // State for error message\n\n  // Hook for navigation\n  const navigate = useNavigate();\n\n  // Function to validate the form inputs\n  const validateForm = () => {\n    const newErrors = {};\n\n    // Check if email is provided and is valid\n    if (!email) {\n      newErrors.email = 'Email is required';\n    } else if (!/\\S+@\\S+\\.\\S+/.test(email)) {\n      newErrors.email = 'Invalid email address';\n    }\n\n    // Update the errors state\n    setErrors(newErrors);\n\n    // Return true if no errors, false otherwise\n    return Object.keys(newErrors).length === 0;\n  };\n\n  // Function to handle form submission\n  const handleSubmit = async (e) => {\n    e.preventDefault(); // Prevent default form submission\n\n    // Validate the form inputs\n    if (!validateForm()) return; // Stop if validation fails\n\n    try {\n      // Make a POST request to request a password reset\n      const response = await makeForgotPasswordRequest(email);\n\n      // Update the success message state\n      setMessage(response.data.message);\n\n      // Clear any error message\n      setError('');\n\n      // Redirect to login page after successful request\n      navigate('/login');\n    } catch (err) {\n      // Update the error message state\n      setError(err.response?.data?.message || 'Something went wrong');\n    }\n  };\n\n  // JSX to render the forgot password form\n  return (\n    <div className=\"forgot-password-container\">\n      <h2>Forgot Password</h2>\n      {message && <div className=\"success-message\">{message}</div>} {/* Display success message if present */}\n      {error && <div className=\"error-message\">{error}</div>} {/* Display error message if present */}\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"email\">Email</label>\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)} // Update email state on input change\n            placeholder=\"Enter your email\"\n          />\n          {errors.email && <div className=\"error\">{errors.email}</div>} {/* Display email error if present */}\n        </div>\n        <button type=\"submit\">Submit</button> {/* Submit button */}\n      </form>\n      <div className=\"text-center mt-3\">\n        Remember your password? <a href=\"/login\">Login here</a> {/* Link to login page */}\n      </div>\n    </div>\n  );\n};\n\n// Exporting the ForgotPassword component as default\nexport default ForgotPassword;","import axios from 'axios';\nimport { AUTH, USER } from '../constants/apiRoutes';\n\nasync function makeForgotPasswordRequest(email) {\n    return axios.post(AUTH.FORGOT_PASSWORD, { email });\n}\n\nasync function makeLoginRequest(email, password) {\n    return axios.post(AUTH.LOGIN, { email, password });\n}\n\nasync function makeRegisterRequest(formData) {\n    return axios.post(AUTH.REGISTER, formData);\n}\n\nasync function makeResetPasswordRequest(token, password) {\n    return axios.post(AUTH.RESET_PASSWORD, {\n        token, // Include the reset token\n        password, // Include the new password\n      });\n}\n\nasync function validateUserToken(token) {\n    return axios.get(USER.VALIDATE_USER, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n}\n\nexport { makeForgotPasswordRequest, makeLoginRequest, makeRegisterRequest, makeResetPasswordRequest, validateUserToken };"],"names":["API_BASE_URL","AUTH","LOGIN","concat","REGISTER","FORGOT_PASSWORD","RESET_PASSWORD","UPDATE_PROFILE","USER","VALIDATE_USER","GET_PROFILE","ForgotPassword","email","setEmail","useState","errors","setErrors","message","setMessage","error","setError","navigate","useNavigate","_jsxs","className","children","_jsx","onSubmit","async","e","preventDefault","validateForm","newErrors","test","Object","keys","length","response","makeForgotPasswordRequest","data","err","_err$response","_err$response$data","htmlFor","type","name","value","onChange","target","placeholder","href","axios","post","makeLoginRequest","password","makeRegisterRequest","formData","makeResetPasswordRequest","token","validateUserToken","get","headers","Authorization"],"sourceRoot":""}