{"version":3,"file":"static/js/794.35965404.chunk.js","mappings":"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","sources":["constants/apiRoutes.js","pages/Profile.js","services/ProfileService.js","services/AuthService.js"],"sourcesContent":["export const API_BASE_URL = '/api';\n\nexport const AUTH = {\n  LOGIN: `${API_BASE_URL}/auth/login`,\n  REGISTER: `${API_BASE_URL}/auth/register`,\n  FORGOT_PASSWORD: `${API_BASE_URL}/auth/forgot-password`,\n  RESET_PASSWORD: `${API_BASE_URL}/auth/reset-password`,\n  UPDATE_PROFILE: `${API_BASE_URL}/auth/update-profile`,\n};\n\nexport const USER = {\n  VALIDATE_USER: `${API_BASE_URL}/auth/user`,\n  GET_PROFILE: `${API_BASE_URL}/user/profile`,\n  UPDATE_PROFILE: `${API_BASE_URL}/user/update-profile`,\n};\n\nexport const POSTS = {\n  GET_ALL: `${API_BASE_URL}/posts`,\n  CREATE: `${API_BASE_URL}/posts/create`,\n  UPDATE: `${API_BASE_URL}/posts/update`,\n  DELETE: `${API_BASE_URL}/posts/delete`,\n};","import \"../css/Profile.css\";\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { validateUserToken } from '../services/AuthService';\nimport { saveUserProfile } from '../services/ProfileService';\n\nconst Profile = () => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [profilePicture, setProfilePicture] = useState('');\n  const [isEditing, setIsEditing] = useState(false);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        if (!token) {\n          navigate('/login'); // Redirect to login if no token is found\n          return;\n        }\n\n        const response = await validateUserToken(token);\n        setUser(response.data);\n        setName(response.data.name);\n        setEmail(response.data.email);\n        setProfilePicture(response.data.profilePicture);\n        setLoading(false);\n      } catch (err) {\n        setError(err.response?.data?.message || 'Something went wrong');\n        setLoading(false);\n        navigate('/login'); // Redirect to login if token is invalid\n      }\n    };\n\n    fetchUserData();\n  }, [navigate]);\n\n  const handleUpdateProfile = async (e) => {\n    e.preventDefault();\n\n    try {\n      const token = localStorage.getItem('token');\n      const response = await saveUserProfile(token, { name, email, profilePicture });\n      setUser(response.data);\n      setIsEditing(false);\n      setError('');\n    } catch (err) {\n      setError(err.response?.data?.message || 'Something went wrong');\n    }\n  };\n\n  const handleFileChange = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setProfilePicture(reader.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (error) {\n    return <div className=\"error-message\">{error}</div>;\n  }\n\n  return (\n    <div className=\"profile-container\">\n      <h2>Profile</h2>\n      <div className=\"profile-picture\">\n        <img\n          src={profilePicture || 'https://via.placeholder.com/150'}\n          alt=\"Profile\"\n        />\n        {isEditing && (\n          <input type=\"file\" accept=\"image/*\" onChange={handleFileChange} />\n        )}\n      </div>\n      {isEditing ? (\n        <form onSubmit={handleUpdateProfile}>\n          <div className=\"form-group\">\n            <label htmlFor=\"name\">Name</label>\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"email\">Email</label>\n            <input\n              type=\"email\"\n              name=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </div>\n          <button type=\"submit\">Save Changes</button>\n          <button type=\"button\" onClick={() => setIsEditing(false)}>\n            Cancel\n          </button>\n        </form>\n      ) : (\n        <div className=\"profile-info\">\n          <p>\n            <strong>Name:</strong> {user?.name}\n          </p>\n          <p>\n            <strong>Email:</strong> {user?.email}\n          </p>\n          <button onClick={() => setIsEditing(true)}>Edit Profile</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Profile;","import axios from 'axios';\nimport { USER } from '../constants/apiRoutes';\n\nasync function saveUserProfile(token, {name, email, profilePicture}) {\n    return axios.put(\n        USER.UPDATE_PROFILE,\n        { name, email, profilePicture },\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      );\n}\n\nexport { saveUserProfile };","import axios from 'axios';\nimport { AUTH, USER } from '../constants/apiRoutes';\n\nasync function makeForgotPasswordRequest(email) {\n    return axios.post(AUTH.FORGOT_PASSWORD, { email });\n}\n\nasync function makeLoginRequest(email, password) {\n    return axios.post(AUTH.LOGIN, { email, password });\n}\n\nasync function makeRegisterRequest(formData) {\n    return axios.post(AUTH.REGISTER, formData);\n}\n\nasync function makeResetPasswordRequest(token, password) {\n    return axios.post(AUTH.RESET_PASSWORD, {\n        token, // Include the reset token\n        password, // Include the new password\n      });\n}\n\nasync function validateUserToken(token) {\n    return axios.get(USER.VALIDATE_USER, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n}\n\nexport { makeForgotPasswordRequest, makeLoginRequest, makeRegisterRequest, makeResetPasswordRequest, validateUserToken };"],"names":["API_BASE_URL","AUTH","LOGIN","concat","REGISTER","FORGOT_PASSWORD","RESET_PASSWORD","UPDATE_PROFILE","USER","VALIDATE_USER","GET_PROFILE","Profile","user","setUser","useState","loading","setLoading","error","setError","name","setName","email","setEmail","profilePicture","setProfilePicture","isEditing","setIsEditing","navigate","useNavigate","useEffect","async","token","localStorage","getItem","response","validateUserToken","data","err","_err$response","_err$response$data","message","fetchUserData","_jsx","children","className","_jsxs","src","alt","type","accept","onChange","e","file","target","files","reader","FileReader","onloadend","result","readAsDataURL","onSubmit","preventDefault","_ref","axios","put","headers","Authorization","saveUserProfile","_err$response2","_err$response2$data","htmlFor","value","onClick","makeForgotPasswordRequest","post","makeLoginRequest","password","makeRegisterRequest","formData","makeResetPasswordRequest","get"],"sourceRoot":""}