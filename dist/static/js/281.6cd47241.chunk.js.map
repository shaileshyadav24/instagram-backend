{"version":3,"file":"static/js/281.6cd47241.chunk.js","mappings":"2IAAO,MAAMA,EAAe,OAEfC,EAAO,CAClBC,MAAM,GAADC,OAAKH,EAAY,eACtBI,SAAS,GAADD,OAAKH,EAAY,kBACzBK,gBAAgB,GAADF,OAAKH,EAAY,yBAChCM,eAAe,GAADH,OAAKH,EAAY,wBAC/BO,eAAe,GAADJ,OAAKH,EAAY,yBAGpBQ,EAAO,CAClBC,cAAc,GAADN,OAAKH,EAAY,cAC9BU,YAAY,GAADP,OAAKH,EAAY,iBAC5BO,eAAe,GAADJ,OAAKH,EAAY,yBAIvB,GAADG,OAAKH,EAAY,UACjB,GAADG,OAAKH,EAAY,iBAChB,GAADG,OAAKH,EAAY,iBAChB,GAADG,OAAKH,EAAY,gB,qGCbzB,MA0DA,EA1DkBW,KAChB,MAAOC,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,OAC1BC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IAChCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,IAC7BK,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,KACcC,WACpB,IACE,MAAMC,EAAQC,aAAaC,QAAQ,SACnC,IAAKF,EAEH,YADAN,EAAS,UAIX,MAAMS,QAAiBC,EAAAA,EAAAA,IAAkBJ,GACzCJ,GAASS,EAAAA,EAAAA,IAAaF,EAASG,OAC/BlB,EAAQe,EAASG,MACjBf,GAAW,EACb,CAAE,MAAOgB,GAAM,IAADC,EAAAC,EACZb,GAASc,EAAAA,EAAAA,OACTjB,GAAqB,QAAZe,EAAAD,EAAIJ,gBAAQ,IAAAK,GAAM,QAANC,EAAZD,EAAcF,YAAI,IAAAG,OAAN,EAAZA,EAAoBE,UAAW,wBACxCpB,GAAW,GACXG,EAAS,SACX,GAGFkB,EAAe,GACd,CAAClB,IAYJ,OAAIJ,GACKuB,EAAAA,EAAAA,KAAA,OAAAC,SAAK,eAGVtB,GACKqB,EAAAA,EAAAA,KAAA,OAAKE,UAAU,gBAAeD,SAAEtB,KAIvCwB,EAAAA,EAAAA,MAAA,OAAKD,UAAU,sBAAqBD,SAAA,EAClCE,EAAAA,EAAAA,MAAA,MAAAF,SAAA,CAAI,aAASE,EAAAA,EAAAA,MAAA,KAAGC,QAdAC,KAClBxB,EAAS,WAAW,EAamBoB,SAAA,CAAM,OAAJ3B,QAAI,IAAJA,OAAI,EAAJA,EAAMgC,KAAK,WAClDH,EAAAA,EAAAA,MAAA,KAAAF,SAAA,CAAG,UAAY,OAAJ3B,QAAI,IAAJA,OAAI,EAAJA,EAAMiC,UACjBP,EAAAA,EAAAA,KAAA,UAAQI,QAtBSI,KACnBzB,GAASc,EAAAA,EAAAA,OACTT,aAAaqB,WAAW,SACxB5B,EAAS,SAAS,EAmBcoB,SAAC,aAC3B,C,4FC1DVf,eAAewB,EAA0BH,GACrC,OAAOI,EAAAA,EAAMC,KAAKjD,EAAAA,GAAKI,gBAAiB,CAAEwC,SAC9C,CAEArB,eAAe2B,EAAiBN,EAAOO,GACnC,OAAOH,EAAAA,EAAMC,KAAKjD,EAAAA,GAAKC,MAAO,CAAE2C,QAAOO,YAC3C,CAEA5B,eAAe6B,EAAoBC,GAC/B,OAAOL,EAAAA,EAAMC,KAAKjD,EAAAA,GAAKG,SAAUkD,EACrC,CAEA9B,eAAe+B,EAAyB9B,EAAO2B,GAC3C,OAAOH,EAAAA,EAAMC,KAAKjD,EAAAA,GAAKK,eAAgB,CACnCmB,QACA2B,YAER,CAEA5B,eAAeK,EAAkBJ,GAC7B,OAAOwB,EAAAA,EAAMO,IAAIhD,EAAAA,GAAKC,cAAe,CACjCgD,QAAS,CACPC,cAAc,UAADvD,OAAYsB,KAGnC,C","sources":["constants/apiRoutes.js","pages/Dashboard.js","services/AuthService.js"],"sourcesContent":["export const API_BASE_URL = '/api';\n\nexport const AUTH = {\n  LOGIN: `${API_BASE_URL}/auth/login`,\n  REGISTER: `${API_BASE_URL}/auth/register`,\n  FORGOT_PASSWORD: `${API_BASE_URL}/auth/forgot-password`,\n  RESET_PASSWORD: `${API_BASE_URL}/auth/reset-password`,\n  UPDATE_PROFILE: `${API_BASE_URL}/auth/update-profile`,\n};\n\nexport const USER = {\n  VALIDATE_USER: `${API_BASE_URL}/auth/user`,\n  GET_PROFILE: `${API_BASE_URL}/user/profile`,\n  UPDATE_PROFILE: `${API_BASE_URL}/user/update-profile`,\n};\n\nexport const POSTS = {\n  GET_ALL: `${API_BASE_URL}/posts`,\n  CREATE: `${API_BASE_URL}/posts/create`,\n  UPDATE: `${API_BASE_URL}/posts/update`,\n  DELETE: `${API_BASE_URL}/posts/delete`,\n};","import \"../css/Dashboard.css\";\nimport React, { useEffect, useState } from 'react';\nimport { validateUserToken } from '../services/AuthService';\nimport { useNavigate } from 'react-router-dom';\nimport { logout, loginSuccess } from '../store/slices/auth';\nimport { useDispatch } from 'react-redux';\n\nconst Dashboard = () => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        if (!token) {\n          navigate('/login'); // Redirect to login if no token is found\n          return;\n        }\n\n        const response = await validateUserToken(token);\n        dispatch(loginSuccess(response.data));\n        setUser(response.data);\n        setLoading(false);\n      } catch (err) {\n        dispatch(logout())\n        setError(err.response?.data?.message || 'Something went wrong');\n        setLoading(false);\n        navigate('/login'); // Redirect to login if token is invalid\n      }\n    };\n\n    fetchUserData();\n  }, [navigate]);\n\n  const handleLogout = () => {\n    dispatch(logout()); // Dispatch the logout action\n    localStorage.removeItem('token'); // Remove token from localStorage\n    navigate('/login'); // Redirect to login page\n  };\n\n  const goToProfile = () => {\n    navigate('/profile');\n  };\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (error) {\n    return <div className=\"error-message\">{error}</div>;\n  }\n\n  return (\n    <div className=\"dashboard-container\">\n      <h2>Welcome, <a onClick={goToProfile}>{user?.name}!</a></h2>\n      <p>Email: {user?.email}</p>\n      <button onClick={handleLogout}>Logout</button>\n    </div>\n  );\n};\n\nexport default Dashboard;","import axios from 'axios';\nimport { AUTH, USER } from '../constants/apiRoutes';\n\nasync function makeForgotPasswordRequest(email) {\n    return axios.post(AUTH.FORGOT_PASSWORD, { email });\n}\n\nasync function makeLoginRequest(email, password) {\n    return axios.post(AUTH.LOGIN, { email, password });\n}\n\nasync function makeRegisterRequest(formData) {\n    return axios.post(AUTH.REGISTER, formData);\n}\n\nasync function makeResetPasswordRequest(token, password) {\n    return axios.post(AUTH.RESET_PASSWORD, {\n        token, // Include the reset token\n        password, // Include the new password\n      });\n}\n\nasync function validateUserToken(token) {\n    return axios.get(USER.VALIDATE_USER, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n}\n\nexport { makeForgotPasswordRequest, makeLoginRequest, makeRegisterRequest, makeResetPasswordRequest, validateUserToken };"],"names":["API_BASE_URL","AUTH","LOGIN","concat","REGISTER","FORGOT_PASSWORD","RESET_PASSWORD","UPDATE_PROFILE","USER","VALIDATE_USER","GET_PROFILE","Dashboard","user","setUser","useState","loading","setLoading","error","setError","navigate","useNavigate","dispatch","useDispatch","useEffect","async","token","localStorage","getItem","response","validateUserToken","loginSuccess","data","err","_err$response","_err$response$data","logout","message","fetchUserData","_jsx","children","className","_jsxs","onClick","goToProfile","name","email","handleLogout","removeItem","makeForgotPasswordRequest","axios","post","makeLoginRequest","password","makeRegisterRequest","formData","makeResetPasswordRequest","get","headers","Authorization"],"sourceRoot":""}